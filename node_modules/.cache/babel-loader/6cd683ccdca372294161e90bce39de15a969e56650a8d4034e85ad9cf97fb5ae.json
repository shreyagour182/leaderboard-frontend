{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiviii\\\\leaderboard-app\\\\leaderboard-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UserSelector from './components/UserSelector';\nimport Leaderboard from './components/Leaderboard';\nimport ClaimHistory from './components/ClaimHistory';\nimport api from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  const [claimResult, setClaimResult] = useState(null);\n  const claimPoints = async () => {\n    if (!selectedUser) return;\n    const res = await api.post(`/claims/${selectedUser}`);\n    setClaimResult(res.data);\n    setRefresh(r => !r); // to refresh lists\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: '2rem auto',\n      fontFamily: 'Montserrat, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Leaderboard App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserSelector, {\n      onUserSelected: setSelectedUser,\n      refresh: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: claimPoints,\n      disabled: !selectedUser,\n      style: {\n        margin: '1rem 0',\n        padding: '0.5rem 1.5rem',\n        borderRadius: 6,\n        background: '#FFD700',\n        color: '#333',\n        fontWeight: 600,\n        border: 'none'\n      },\n      children: \"Claim Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), claimResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: claimResult.user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), \" just claimed \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: claimResult.randomPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 55\n      }, this), \" points!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n      refresh: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClaimHistory, {\n      userId: selectedUser,\n      refresh: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z2uSegitTo/OA+OtCxS3keaAp+w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UserSelector","Leaderboard","ClaimHistory","api","jsxDEV","_jsxDEV","App","_s","selectedUser","setSelectedUser","refresh","setRefresh","claimResult","setClaimResult","claimPoints","res","post","data","r","style","maxWidth","margin","fontFamily","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onUserSelected","onClick","disabled","padding","borderRadius","background","color","fontWeight","border","user","name","randomPoints","userId","_c","$RefreshReg$"],"sources":["C:/Users/shiviii/leaderboard-app/leaderboard-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport UserSelector from './components/UserSelector';\nimport Leaderboard from './components/Leaderboard';\nimport ClaimHistory from './components/ClaimHistory';\nimport api from './api';\n\nfunction App() {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  const [claimResult, setClaimResult] = useState(null);\n\n  const claimPoints = async () => {\n    if (!selectedUser) return;\n    const res = await api.post(`/claims/${selectedUser}`);\n    setClaimResult(res.data);\n    setRefresh(r => !r); // to refresh lists\n  };\n\n  return (\n    <div style={{ maxWidth: 600, margin: '2rem auto', fontFamily: 'Montserrat, sans-serif' }}>\n      <h2 style={{ textAlign: 'center' }}>Leaderboard App</h2>\n      <UserSelector onUserSelected={setSelectedUser} refresh={refresh} />\n      <button onClick={claimPoints} disabled={!selectedUser} style={{\n        margin: '1rem 0', padding: '0.5rem 1.5rem', borderRadius: 6,\n        background: '#FFD700', color: '#333', fontWeight: 600, border: 'none'\n      }}>Claim Points</button>\n      {claimResult && (\n        <div>\n          <b>{claimResult.user.name}</b> just claimed <b>{claimResult.randomPoints}</b> points!\n        </div>\n      )}\n      <Leaderboard refresh={refresh} />\n      <ClaimHistory userId={selectedUser} refresh={refresh} />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACN,YAAY,EAAE;IACnB,MAAMO,GAAG,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,WAAWR,YAAY,EAAE,CAAC;IACrDK,cAAc,CAACE,GAAG,CAACE,IAAI,CAAC;IACxBN,UAAU,CAACO,CAAC,IAAI,CAACA,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEb,OAAA;IAAKc,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,WAAW;MAAEC,UAAU,EAAE;IAAyB,CAAE;IAAAC,QAAA,gBACvFlB,OAAA;MAAIc,KAAK,EAAE;QAAEK,SAAS,EAAE;MAAS,CAAE;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDvB,OAAA,CAACL,YAAY;MAAC6B,cAAc,EAAEpB,eAAgB;MAACC,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEvB,OAAA;MAAQyB,OAAO,EAAEhB,WAAY;MAACiB,QAAQ,EAAE,CAACvB,YAAa;MAACW,KAAK,EAAE;QAC5DE,MAAM,EAAE,QAAQ;QAAEW,OAAO,EAAE,eAAe;QAAEC,YAAY,EAAE,CAAC;QAC3DC,UAAU,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,UAAU,EAAE,GAAG;QAAEC,MAAM,EAAE;MACjE,CAAE;MAAAd,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvBhB,WAAW,iBACVP,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAIX,WAAW,CAAC0B,IAAI,CAACC;MAAI;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,kBAAc,eAAAvB,OAAA;QAAAkB,QAAA,EAAIX,WAAW,CAAC4B;MAAY;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,YAC/E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eACDvB,OAAA,CAACJ,WAAW;MAACS,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCvB,OAAA,CAACH,YAAY;MAACuC,MAAM,EAAEjC,YAAa;MAACE,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAACrB,EAAA,CA7BQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}